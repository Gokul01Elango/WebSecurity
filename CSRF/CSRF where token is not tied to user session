# Lab: CSRF where token is not tied to user session

**Lab Description:**

The lab presents a Cross-Site Request Forgery (CSRF) vulnerability within an email change functionality. Although the application utilizes tokens to counter CSRF attacks, these tokens lack integration into the site's session handling system.

**Core Concepts:**

1. **CSRF (Cross-Site Request Forgery):**
   - CSRF represents a web security vulnerability wherein an attacker deceives a user's browser into executing unintended requests on a trusted site.

2. **CSRF Token:**
   - CSRF tokens serve as a defense mechanism against unauthorized requests. Typically linked to a user's session, they must be included in requests to ensure their authenticity.

3. **Token Not Tied to Session:**
   - This lab exposes a vulnerability where CSRF tokens are not seamlessly integrated into the site's session handling. Consequently, these tokens may not be securely bound to a user's session.

**Steps to Solve the Lab:**

1. **Access the Lab:**
   - Log in to your account on the application using Burp's browser.

2. **Intercept Update Email Request:**
   - Submit the "Update email" form and intercept the resulting request using Burp Suite.
   - Identify and make a note of the CSRF token's value.

3. **Use a Different Account:**
   - Open a private/incognito browser window and log in to your other account on the same application.

4. **Send Request to Burp Repeater:**
   - Capture the update email request from the second account using Burp Repeater.

5. **Swap CSRF Tokens:**
   - Observe that if you swap the CSRF token in the request with the value from the first account, the request is accepted. This indicates a CSRF vulnerability.

6. **Create an Exploit Page:**
   - Set up an HTML page on your exploit server that hosts a proof of concept exploit. Follow steps similar to the CSRF vulnerability with no defenses lab.

7. **Modify Email Address:**
   - Edit the email address in your exploit so that it doesn't match your own.

8. **Store Exploit:**
   - Host the exploit on your exploit server.

9. **Deliver to Victim:**
   - In the lab interface, click "Deliver to victim" to execute the CSRF attack and change the victim's email address using the crafted exploit.

10. **Verify Success:**
   - Confirm that the CSRF attack successfully changes the email address of the victim user.

**Important Note:**

Always ensure that you have explicit authorization to perform any security testing, and confine your actions to authorized environments such as labs or testing environments. Unauthorized attempts to exploit vulnerabilities in real-world applications are illegal and unethical. Ethical hacking should always follow legal and responsible guidelines.
